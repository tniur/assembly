;========================= Print one letter ==========================

_print_letter_ macro letter

    push AX
    push DX
    
    mov DL, letter
    mov AH, 02
    int 21h
    
    pop DX
    pop AX
endm

;========================== Start new line ===========================

_new_line_ macro
    _print_letter_ CR
    _print_letter_ LF
endm

;========================== Print Message ============================

_print_message_ macro message
local msg, skip
    push AX
    push DX

    mov DX, offset msg
    mov AH, 09h
    int 21h

    pop DX
    pop AX

    jmp skip
    msg DB message,'$'
    skip:
endm

;========================== Print File Name ==========================

_print_file_name_ macro FileName

    push AX
    push DX
    push BX

    xor BH, BH
    mov BL, FileName[1]
    mov FileName[BX+2], '$'
    mov DX, offset FileName[2]
    mov AH, 09h
    int 21h
    mov FileName[BX+2], 0

    pop BX
    pop DX
    pop AX
endm

;======================= Read PSP Parameters =========================

_read_psp_parameters_ macro InputFile, OutputFile
local cycle_1, cycle_2, _end, parse_outputfile_name
    push DI
    push AX
    inc SI
    inc SI
    mov DI, offset InputFile[2]
    cycle_1:
        mov AL, byte ptr [SI] 
        cmp AL, Space
        je parse_outputfile_name

        mov [DI], AL
        inc SI
        inc DI
        
        jmp cycle_1
    
parse_outputfile_name:
        inc SI
        mov DI, offset OutputFile[2]
        cycle_2:
            mov AL, byte ptr [SI] 
            cmp AL, CR
            je _end

            mov [DI], AL
            inc SI
            inc DI
            
            jmp cycle_2

    _end:
    pop AX
    pop DI
endm

;============================= Read File =============================



;=====================================================================